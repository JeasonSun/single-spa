{"version":3,"file":"single-spa.js","sources":["../../src/applications/app.helpers.js","../../src/start.js","../../src/lifecycles/load.js","../../src/lifecycles/unmount.js","../../src/lifecycles/bootstrap.js","../../src/lifecycles/mount.js","../../src/navigations/navigator-events.js","../../src/navigations/reroute.js","../../src/applications/app.js"],"sourcesContent":["// 描述应用的整个状态\n\n//  应用的初始状态\nexport const NOT_LOADED = 'NOT_LOADED'\n// 加载资源\nexport const LOADING_SOURCE_CODE = 'LOADING_SOURCE_CODE'\n// 还没有调用bootstrap方法\nexport const NOT_BOOTSTRAPPED = 'NOT_BOOTSTRAPPED'\n// 启动中\nexport const BOOTSTRAPPING = 'BOOTSTRAPPING'\n//没有调用mount方法\nexport const NOT_MOUNTED = 'NOT_MOUNTED'\n// 正在挂载中\nexport const MOUNTING = 'MOUNTING'\n// 挂载完毕\nexport const MOUNTED = 'MOUNTED'\n//  更新中\nexport const UPDATING = 'UPDATING'\n// 卸载中，解除挂载\nexport const UNMOUNTING = 'UNMOUNTING'\n// 完全卸载中\nexport const UNLOADING = 'UNLOADING'\n// 资源加载错误状态\nexport const LOAD_ERR = 'LOAD_ERR'\n// 代码运行错误\nexport const SKIP_BECAUSE_BROKEN = 'SKIP_BECAUSE_BROKEN'\n\n// 当前应用是否被激活\nexport function isActive (app) {\n  return app.status === MOUNTED\n}\n\n// 当前这个应用是否要被激活\nexport function shouldBeActive (app) {\n  return app.activeWhen(window.location) // 如果返回true， 那么应用就需要开始初始化等一系列操作。\n}\n","import { reroute } from './navigations/reroute'\n\nexport let started = false\n\nexport function start () {\n  // 需要挂载应用\n  started = true\n  reroute() // 除了去加载应用 还需要去挂载应用\n}\n","import {\n  LOADING_SOURCE_CODE,\n  NOT_BOOTSTRAPPED\n} from '../applications/app.helpers'\n\nexport async function toLoadPromise (app) {\n  if (app.loadPromise) {\n    return app.loadPromise // 缓存机制\n  }\n\n  return (app.loadPromise = Promise.resolve().then(async () => {\n    app.status = LOADING_SOURCE_CODE\n\n    const { bootstrap, mount, unmount } = await app.loadApp(app.customProps) // 这个方法是用户定义的，返回bootstrap,mount,unmount\n    app.status = NOT_BOOTSTRAPPED\n    // 希望将多个promise组合在一起  compose\n    app.bootstrap = flattenFnArray(bootstrap)\n    app.mount = flattenFnArray(mount)\n    app.unmount = flattenFnArray(unmount)\n    delete app.loadPromise\n    return app\n  }))\n}\n\nfunction flattenFnArray (fns) {\n  fns = Array.isArray(fns) ? fns : [fns]\n  // 通过promise链来链式调用\n  return props =>\n    fns.reduce((p, fn) => p.then(() => fn(props)), Promise.resolve())\n}\n","import { MOUNTED, UNMOUNTING, NOT_MOUNTED } from '../applications/app.helpers'\n\nexport async function toUnmountPromise (app) {\n  // 当前应用没有被挂载，直接什么都不做了\n  if (app.status != MOUNTED) {\n    return app\n  }\n\n  app.status = UNMOUNTING\n  await app.unmount(app.customProps)\n  app.status = NOT_MOUNTED\n  return app\n}\n","import {\n  NOT_BOOTSTRAPPED,\n  BOOTSTRAPPING,\n  NOT_MOUNTED\n} from '../applications/app.helpers'\n\nexport async function toBootstrapPromise (app) {\n  if (app.status !== NOT_BOOTSTRAPPED) {\n    return app\n  }\n  app.status = BOOTSTRAPPING\n  await app.bootstrap(app.customProps)\n  app.status = NOT_MOUNTED\n  return app\n}\n","import { NOT_MOUNTED, MOUNTING, MOUNTED } from '../applications/app.helpers'\n\nexport async function toMountPromise (app) {\n  if (app.status !== NOT_MOUNTED) {\n    return app\n  }\n  app.status = MOUNTING\n  await app.mount(app.customProps)\n  app.status = MOUNTED\n  return app\n}\n","import { reroute } from './reroute'\n\n// hashchange  popstate\nexport const routingEventsListeningTo = ['hashchange', 'popstate']\n\nfunction urlReroute () {\n  reroute([], arguments)\n}\n\nconst capturedEventListeners = {\n  hashchange: [],\n  popstate: [] // TODO:在切换完成后，应该执行一下暂存的\n}\n\nwindow.addEventListener('hashchange', urlReroute)\n\nwindow.addEventListener('popstate', urlReroute)\n\nconst originalAddEventListener = window.addEventListener\nconst originalRemoveEventListener = window.removeEventListener\n\nwindow.addEventListener = function (eventName, fn) {\n  if (\n    routingEventsListeningTo.indexOf(eventName) >= 0 &&\n    capturedEventListeners[eventName].some(listener => listener == fn)\n  ) {\n    capturedEventListeners[eventName].push(fn)\n    return\n  }\n  return originalAddEventListener.apply(this, arguments)\n}\n\nwindow.removeEventListener = function (eventName, fn) {\n  if (routingEventsListeningTo.indexOf(eventName) >= 0) {\n    capturedEventListeners[eventName] = capturedEventListeners[\n      eventName\n    ].filter(l => l !== fn)\n    return\n  }\n  return originalRemoveEventListener.apply(this, arguments)\n}\n\n// 用户可能还会绑定自己的路由事件 vue\n\n// 当我们应用切换后，还需要处理原来的方法，比如vue，需要在应用切换后执行。\n\n// 如果是hash路由， hash变化的时候可以切换\n// 浏览器路由，浏览器路由是h5 api的， 如果切换时候不会触发popstate\n\nwindow.history.pushState = patchedUpdateState(\n  window.history.pushState,\n  'pushState'\n)\n\nwindow.history.replaceState = patchedUpdateState(\n  window.history.replaceState,\n  'replaceState'\n)\n\nfunction patchedUpdateState (updateState, methodName) {\n  return function () {\n    const urlBefore = window.location.href\n    updateState.apply(this, arguments)\n    const urlAfter = window.location.href\n\n    if(urlAfter !== urlBefore){\n      // 重新加载应用\n      urlReroute(new PopStateEvent('popstate'))\n    }\n  }\n}\n","import { started } from '../start'\nimport { getAppChanges } from '../applications/app'\nimport { toLoadPromise } from '../lifecycles/load'\nimport { toUnmountPromise } from '../lifecycles/unmount'\nimport { toBootstrapPromise } from '../lifecycles/bootstrap'\nimport { toMountPromise } from '../lifecycles/mount'\n\nexport function reroute () {\n  // 需要获取要被加载的应用\n  // 需要获取要被挂载的应用\n  // 哪些应用需要被卸载\n  const { appsToLoad, appsToMount, appsToUnmount } = getAppChanges()\n  if (started) {\n    // app装载\n    return performAppChanges() // 根据路径来装载应用\n  } else {\n    // 注册应用时候，需要预先加载\n    return loadApps() // 预先加载应用\n  }\n\n  async function loadApps () {\n    // 预加载应用\n    let apps = await Promise.all(appsToLoad.map(toLoadPromise)) // 就是获取到bootstrap,mount,unmount方法，预先放到app上\n  }\n  \n  async function performAppChanges () {\n    // 先卸载不需要的应用,不用await，可以并发的去卸载应用\n    // let unmountApps = await Promise.all(appsToUnmount.map(toUnmountPromise))\n    let unmountApps = appsToUnmount.map(toUnmountPromise)\n  \n    // 再去加载需要的应用\n    // TODO: 加载app1的时候，突然切换路径app2，这个时候不应该继续加载app1了。\n    appsToLoad.map(async app => {\n      // 将需要加载的应用拿到 =》加载=》启动=》 挂载\n      app = await toLoadPromise(app)\n      app = await toBootstrapPromise(app)\n      return toMountPromise(app)\n    })\n  \n    appsToMount.map(async app => {\n      app = await toBootstrapPromise(app)\n      return toMountPromise(app)\n    })\n  }\n}\n\n// 这个流程是用于初始化操作的， 我们还需要 ，当路径切换的时候重新加载应用\n\n// 重写路由相关的方法\nimport './navigator-events'\n","import {\n  NOT_LOADED,\n  SKIP_BECAUSE_BROKEN,\n  shouldBeActive,\n  LOADING_SOURCE_CODE,\n  NOT_BOOTSTRAPPED,\n  BOOTSTRAPPING,\n  NOT_MOUNTED,\n  MOUNTED\n} from './app.helpers'\nimport { reroute } from '../navigations/reroute'\n\n/**\n *\n * @param {*} appName 应用名字\n * @param {*} loadApp 加载的应用\n * @param {*} activeWhen 当激活时候会调用loadApp\n * @param {*} customProps 自定义属性\n */\nconst apps = []\n// 维护状态\nexport function registerApplication (\n  appName,\n  loadApp,\n  activeWhen,\n  customProps\n) {\n  apps.push({\n    name: appName,\n    loadApp,\n    activeWhen,\n    customProps,\n    status: NOT_LOADED\n  })\n\n  reroute() // 加载应用\n}\n\nexport function getAppChanges () {\n  const appsToUnmount = [] // 要卸载的app\n  const appsToLoad = [] // 要加载的app\n  const appsToMount = [] // 需要挂载的app\n  apps.forEach(app => {\n    const appShouldBeActive = shouldBeActive(app)\n    switch (app.status) {\n      case NOT_LOADED:\n      case LOADING_SOURCE_CODE:\n        if (appShouldBeActive) {\n          appsToLoad.push(app)\n        }\n        break\n      case NOT_BOOTSTRAPPED:\n      case BOOTSTRAPPING:\n      case NOT_MOUNTED:\n        if (appShouldBeActive) {\n          appsToMount.push(app)\n        }\n        break\n      case MOUNTED:\n        if (!appShouldBeActive) {\n          appsToUnmount.push(app)\n        }\n        break\n    }\n  })\n  return {\n    appsToLoad,\n    appsToMount,\n    appsToUnmount\n  }\n}\n"],"names":[],"mappings":"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"}